server:
  port: 6770

spring:
  shardingsphere:
    # 数据源配置
    datasource:
      # 数据源名称，多数据源以逗号分隔 ,放在第一个的数据源为未配置分片规则表的默认数据源
      names: db0 , db1
      db0:
        # 数据库连接池类名称
        type: com.zaxxer.hikari.HikariDataSource
        # 数据库驱动类名
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/db0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        username: root
        password: 123456
      db1:
        # 数据库连接池类名称
        type: com.zaxxer.hikari.HikariDataSource
        # 数据库驱动类名
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.0.1:3306/db1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        username: root
        password: 123456

    # 规则配置
    rules:
      sharding:
        # 分片算法配置
        sharding-algorithms:
          order-database-inline:
            # 分片算法类型
            type: INLINE
            props:
              algorithm-expression: db$->{order_id % 2}
          order-table-inline:
            type: INLINE
            props:
              algorithm-expression: t_order_$->{order_id % 4}
          mod:
            type: MOD
            props:
              # 指定分片数量
              sharding-count: 8
          order-table-mod:
            type: MOD
            props:
              # 指定分片数量
              sharding-count: 4
        # 分布式序列算法配置
        key-generators:
          snowflake:
            # 分布式序列算法（雪花算法：SNOWFLAKE； UUID：UUID）（注：UUID没有props配置）
            type: SNOWFLAKE
            # 分布式序列算法属性配置
            props:
              # 工作机器唯一标识
              worker-id: 1
        tables:
          # 逻辑表名称
          t_order:
            # 行表达式标识符可以使用 ${...} 或 $->{...}，但前者与 Spring 本身的属性文件占位符冲突，因此在 Spring 环境中使用行表达式标识符建议使用 $->{...}
            actual-data-nodes: db$->{0..1}.t_order_$->{0..5}
            # 分库策略
            database-strategy:
              standard:
                # 分片列名称
                sharding-column: order_id
                # 分片算法名称
                sharding-algorithm-name: order-database-inline
            # 分表策略
            table-strategy:
              standard:
                # 分片列名称
                sharding-column: order_id
                # 分片算法名称
                sharding-algorithm-name: order-table-inline
            keyGenerateStrategy:
              column: order_id
              keyGeneratorName: snowflake

        # 自动分片表规则配置
#        auto-tables:
#          t_order: # 逻辑表名称
#            actual-data-sources: db$->{0..1}
#            sharding-strategy: # 切分策略
#              standard: # 用于单分片键的标准分片场景
#                sharding-column: order_id # 分片列名称
#                sharding-algorithm-name: mod # 自动分片算法名称
    # 属性配置
    props:
      # 展示修改以后的sql语句
      sql-show: true