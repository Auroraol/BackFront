// Code generated by goctl. DO NOT EDIT!
// Source: wechat.proto

//go:generate mockgen -destination ./wechat_mock.go -package wechatclient -source $GOFILE

package wechatclient

import (
	"context"

	"aso/rpc/wechat/wechat"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	MenuListData               = wechat.MenuListData
	KeyWordReplyData           = wechat.KeyWordReplyData
	KeyWordReplyInfoResp       = wechat.KeyWordReplyInfoResp
	MenuListReq                = wechat.MenuListReq
	WechatMaterialItemData     = wechat.WechatMaterialItemData
	MenuInfoResp               = wechat.MenuInfoResp
	WechatInfoUpdateResponse   = wechat.WechatInfoUpdateResponse
	MenuAddReq                 = wechat.MenuAddReq
	MenuClearResp              = wechat.MenuClearResp
	MenuListResp               = wechat.MenuListResp
	MenuInfoReq                = wechat.MenuInfoReq
	KeyWordReplyUpdateResp     = wechat.KeyWordReplyUpdateResp
	KeyWordReplyAddData        = wechat.KeyWordReplyAddData
	MenuClearReq               = wechat.MenuClearReq
	KeyWordReplyDeleteReq      = wechat.KeyWordReplyDeleteReq
	MenuAddResp                = wechat.MenuAddResp
	MaterialResp               = wechat.MaterialResp
	MaterialItemResp           = wechat.MaterialItemResp
	KeyWordRelyPageReq         = wechat.KeyWordRelyPageReq
	MaterialAddResp            = wechat.MaterialAddResp
	KeyWordReplyPageResp       = wechat.KeyWordReplyPageResp
	KeyWordReplyAddResp        = wechat.KeyWordReplyAddResp
	KeyWordReplyInfoReq        = wechat.KeyWordReplyInfoReq
	WechatInfoResponse         = wechat.WechatInfoResponse
	WechatMaterialItemReq      = wechat.WechatMaterialItemReq
	MaterialAddReq             = wechat.MaterialAddReq
	MaterialItemAddReq         = wechat.MaterialItemAddReq
	KeyWordReplyUpdateReq      = wechat.KeyWordReplyUpdateReq
	KeyWordReplyDeleteResp     = wechat.KeyWordReplyDeleteResp
	ReplyMessageReq            = wechat.ReplyMessageReq
	WechatInfoRequest          = wechat.WechatInfoRequest
	WechatInfoUpdateRequest    = wechat.WechatInfoUpdateRequest
	MaterialReq                = wechat.MaterialReq
	MaterialData               = wechat.MaterialData
	WechatMaterialItemResponse = wechat.WechatMaterialItemResponse
	ReplyMessageResp           = wechat.ReplyMessageResp

	Wechat interface {
		// Info 配置信息
		Info(ctx context.Context, in *WechatInfoRequest) (*WechatInfoResponse, error)
		// Update 更新配置
		Update(ctx context.Context, in *WechatInfoUpdateRequest) (*WechatInfoUpdateResponse, error)
		// MaterialPage 图文选择器列表
		MaterialPage(ctx context.Context, in *MaterialReq) (*MaterialResp, error)
		//  MateRialAdd 图文添加
		MaterialAdd(ctx context.Context, in *MaterialAddReq) (*MaterialAddResp, error)
		// MaterialItem 素材内容
		MaterialItem(ctx context.Context, in *WechatMaterialItemReq) (*WechatMaterialItemResponse, error)
		// MaterialItemAdd 素材内容添加
		MaterialItemAdd(ctx context.Context, in *MaterialItemAddReq) (*MaterialItemResp, error)
		// KeyWordReplyPage 关键词回复列表
		KeyWordReplyPage(ctx context.Context, in *KeyWordRelyPageReq) (*KeyWordReplyPageResp, error)
		// KeyWordAdd 关键词回复添加
		KeyWordAdd(ctx context.Context, in *KeyWordReplyAddData) (*KeyWordReplyAddResp, error)
		// KeyWordDelete 关键词删除
		KeyWordDelete(ctx context.Context, in *KeyWordReplyDeleteReq) (*KeyWordReplyDeleteResp, error)
		// KeyWordInfo 关键词详情
		KeyWordInfo(ctx context.Context, in *KeyWordReplyInfoReq) (*KeyWordReplyInfoResp, error)
		// KeyWordUpdate 关键词更新
		KeyWordUpdate(ctx context.Context, in *KeyWordReplyUpdateReq) (*KeyWordReplyUpdateResp, error)
		// ReplyMessage 关键词回复
		ReplyMessage(ctx context.Context, in *ReplyMessageReq) (*ReplyMessageResp, error)
		// MenuAdd 菜单添加
		MenuAdd(ctx context.Context, in *MenuAddReq) (*MenuAddResp, error)
		// MenuClear 菜单清空
		MenuClear(ctx context.Context, in *MenuClearReq) (*MenuClearResp, error)
		// MenuList 菜单列表
		MenuList(ctx context.Context, in *MenuListReq) (*MenuListResp, error)
		// MenuInfo 菜单信息
		MenuInfo(ctx context.Context, in *MenuInfoReq) (*MenuInfoResp, error)
	}

	defaultWechat struct {
		cli zrpc.Client
	}
)

func NewWechat(cli zrpc.Client) Wechat {
	return &defaultWechat{
		cli: cli,
	}
}

// Info 配置信息
func (m *defaultWechat) Info(ctx context.Context, in *WechatInfoRequest) (*WechatInfoResponse, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.Info(ctx, in)
}

// Update 更新配置
func (m *defaultWechat) Update(ctx context.Context, in *WechatInfoUpdateRequest) (*WechatInfoUpdateResponse, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.Update(ctx, in)
}

// MaterialPage 图文选择器列表
func (m *defaultWechat) MaterialPage(ctx context.Context, in *MaterialReq) (*MaterialResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MaterialPage(ctx, in)
}

//  MateRialAdd 图文添加
func (m *defaultWechat) MaterialAdd(ctx context.Context, in *MaterialAddReq) (*MaterialAddResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MaterialAdd(ctx, in)
}

// MaterialItem 素材内容
func (m *defaultWechat) MaterialItem(ctx context.Context, in *WechatMaterialItemReq) (*WechatMaterialItemResponse, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MaterialItem(ctx, in)
}

// MaterialItemAdd 素材内容添加
func (m *defaultWechat) MaterialItemAdd(ctx context.Context, in *MaterialItemAddReq) (*MaterialItemResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MaterialItemAdd(ctx, in)
}

// KeyWordReplyPage 关键词回复列表
func (m *defaultWechat) KeyWordReplyPage(ctx context.Context, in *KeyWordRelyPageReq) (*KeyWordReplyPageResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.KeyWordReplyPage(ctx, in)
}

// KeyWordAdd 关键词回复添加
func (m *defaultWechat) KeyWordAdd(ctx context.Context, in *KeyWordReplyAddData) (*KeyWordReplyAddResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.KeyWordAdd(ctx, in)
}

// KeyWordDelete 关键词删除
func (m *defaultWechat) KeyWordDelete(ctx context.Context, in *KeyWordReplyDeleteReq) (*KeyWordReplyDeleteResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.KeyWordDelete(ctx, in)
}

// KeyWordInfo 关键词详情
func (m *defaultWechat) KeyWordInfo(ctx context.Context, in *KeyWordReplyInfoReq) (*KeyWordReplyInfoResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.KeyWordInfo(ctx, in)
}

// KeyWordUpdate 关键词更新
func (m *defaultWechat) KeyWordUpdate(ctx context.Context, in *KeyWordReplyUpdateReq) (*KeyWordReplyUpdateResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.KeyWordUpdate(ctx, in)
}

// ReplyMessage 关键词回复
func (m *defaultWechat) ReplyMessage(ctx context.Context, in *ReplyMessageReq) (*ReplyMessageResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.ReplyMessage(ctx, in)
}

// MenuAdd 菜单添加
func (m *defaultWechat) MenuAdd(ctx context.Context, in *MenuAddReq) (*MenuAddResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MenuAdd(ctx, in)
}

// MenuClear 菜单清空
func (m *defaultWechat) MenuClear(ctx context.Context, in *MenuClearReq) (*MenuClearResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MenuClear(ctx, in)
}

// MenuList 菜单列表
func (m *defaultWechat) MenuList(ctx context.Context, in *MenuListReq) (*MenuListResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MenuList(ctx, in)
}

// MenuInfo 菜单信息
func (m *defaultWechat) MenuInfo(ctx context.Context, in *MenuInfoReq) (*MenuInfoResp, error) {
	client := wechat.NewWechatClient(m.cli.Conn())
	return client.MenuInfo(ctx, in)
}
