// Code generated by goctl. DO NOT EDIT!
// Source: wechat.proto

package server

import (
	"context"

	"aso/rpc/wechat/internal/logic"
	"aso/rpc/wechat/internal/svc"
	"aso/rpc/wechat/wechat"
)

type WechatServer struct {
	svcCtx *svc.ServiceContext
}

func NewWechatServer(svcCtx *svc.ServiceContext) *WechatServer {
	return &WechatServer{
		svcCtx: svcCtx,
	}
}

// Info 配置信息
func (s *WechatServer) Info(ctx context.Context, in *wechat.WechatInfoRequest) (*wechat.WechatInfoResponse, error) {
	l := logic.NewInfoLogic(ctx, s.svcCtx)
	return l.Info(in)
}

// Update 更新配置
func (s *WechatServer) Update(ctx context.Context, in *wechat.WechatInfoUpdateRequest) (*wechat.WechatInfoUpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

// MaterialPage 图文选择器列表
func (s *WechatServer) MaterialPage(ctx context.Context, in *wechat.MaterialReq) (*wechat.MaterialResp, error) {
	l := logic.NewMaterialPageLogic(ctx, s.svcCtx)
	return l.MaterialPage(in)
}

//  MateRialAdd 图文添加
func (s *WechatServer) MaterialAdd(ctx context.Context, in *wechat.MaterialAddReq) (*wechat.MaterialAddResp, error) {
	l := logic.NewMaterialAddLogic(ctx, s.svcCtx)
	return l.MaterialAdd(in)
}

// MaterialItem 素材内容
func (s *WechatServer) MaterialItem(ctx context.Context, in *wechat.WechatMaterialItemReq) (*wechat.WechatMaterialItemResponse, error) {
	l := logic.NewMaterialItemLogic(ctx, s.svcCtx)
	return l.MaterialItem(in)
}

// MaterialItemAdd 素材内容添加
func (s *WechatServer) MaterialItemAdd(ctx context.Context, in *wechat.MaterialItemAddReq) (*wechat.MaterialItemResp, error) {
	l := logic.NewMaterialItemAddLogic(ctx, s.svcCtx)
	return l.MaterialItemAdd(in)
}

// KeyWordReplyPage 关键词回复列表
func (s *WechatServer) KeyWordReplyPage(ctx context.Context, in *wechat.KeyWordRelyPageReq) (*wechat.KeyWordReplyPageResp, error) {
	l := logic.NewKeyWordReplyPageLogic(ctx, s.svcCtx)
	return l.KeyWordReplyPage(in)
}

// KeyWordAdd 关键词回复添加
func (s *WechatServer) KeyWordAdd(ctx context.Context, in *wechat.KeyWordReplyAddData) (*wechat.KeyWordReplyAddResp, error) {
	l := logic.NewKeyWordAddLogic(ctx, s.svcCtx)
	return l.KeyWordAdd(in)
}

// KeyWordDelete 关键词删除
func (s *WechatServer) KeyWordDelete(ctx context.Context, in *wechat.KeyWordReplyDeleteReq) (*wechat.KeyWordReplyDeleteResp, error) {
	l := logic.NewKeyWordDeleteLogic(ctx, s.svcCtx)
	return l.KeyWordDelete(in)
}

// KeyWordInfo 关键词详情
func (s *WechatServer) KeyWordInfo(ctx context.Context, in *wechat.KeyWordReplyInfoReq) (*wechat.KeyWordReplyInfoResp, error) {
	l := logic.NewKeyWordInfoLogic(ctx, s.svcCtx)
	return l.KeyWordInfo(in)
}

// KeyWordUpdate 关键词更新
func (s *WechatServer) KeyWordUpdate(ctx context.Context, in *wechat.KeyWordReplyUpdateReq) (*wechat.KeyWordReplyUpdateResp, error) {
	l := logic.NewKeyWordUpdateLogic(ctx, s.svcCtx)
	return l.KeyWordUpdate(in)
}

// ReplyMessage 关键词回复
func (s *WechatServer) ReplyMessage(ctx context.Context, in *wechat.ReplyMessageReq) (*wechat.ReplyMessageResp, error) {
	l := logic.NewReplyMessageLogic(ctx, s.svcCtx)
	return l.ReplyMessage(in)
}

// MenuAdd 菜单添加
func (s *WechatServer) MenuAdd(ctx context.Context, in *wechat.MenuAddReq) (*wechat.MenuAddResp, error) {
	l := logic.NewMenuAddLogic(ctx, s.svcCtx)
	return l.MenuAdd(in)
}

// MenuClear 菜单清空
func (s *WechatServer) MenuClear(ctx context.Context, in *wechat.MenuClearReq) (*wechat.MenuClearResp, error) {
	l := logic.NewMenuClearLogic(ctx, s.svcCtx)
	return l.MenuClear(in)
}

// MenuList 菜单列表
func (s *WechatServer) MenuList(ctx context.Context, in *wechat.MenuListReq) (*wechat.MenuListResp, error) {
	l := logic.NewMenuListLogic(ctx, s.svcCtx)
	return l.MenuList(in)
}

// MenuInfo 菜单信息
func (s *WechatServer) MenuInfo(ctx context.Context, in *wechat.MenuInfoReq) (*wechat.MenuInfoResp, error) {
	l := logic.NewMenuInfoLogic(ctx, s.svcCtx)
	return l.MenuInfo(in)
}
