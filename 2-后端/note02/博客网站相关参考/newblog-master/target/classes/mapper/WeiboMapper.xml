<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myblog.dao.WeiboMapper">
    <resultMap id="BaseResultMap" type="com.myblog.model.Weibo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="created_at" jdbcType="VARCHAR" property="createdAt"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.myblog.model.Weibo">
        <result column="text" jdbcType="LONGVARCHAR" property="text"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , uid, name, location, url, created_at, type
    </sql>
    <sql id="Blob_Column_List">
        text
    </sql>
    <cache eviction="LRU"
           type="org.apache.ibatis.cache.impl.PerpetualCache"
           flushInterval="120000"
           size="1024"
           readOnly="true"/>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from weibo
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from weibo
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.myblog.model.Weibo">
        insert into weibo (id, uid, name,
                           location, url, created_at,
                           type, text)
        values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
                #{location,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{createdAt,jdbcType=VARCHAR},
                #{type,jdbcType=INTEGER}, #{text,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.myblog.model.Weibo">
        insert into weibo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="text != null">
                text,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="text != null">
                #{text,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.myblog.model.Weibo">
        update weibo
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="text != null">
                text = #{text,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myblog.model.Weibo">
        update weibo
        set uid        = #{uid,jdbcType=VARCHAR},
            name       = #{name,jdbcType=VARCHAR},
            location   = #{location,jdbcType=VARCHAR},
            url        = #{url,jdbcType=VARCHAR},
            created_at = #{createdAt,jdbcType=VARCHAR},
            type       = #{type,jdbcType=INTEGER},
            text       = #{text,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.myblog.model.Weibo">
        update weibo
        set uid        = #{uid,jdbcType=VARCHAR},
            name       = #{name,jdbcType=VARCHAR},
            location   = #{location,jdbcType=VARCHAR},
            url        = #{url,jdbcType=VARCHAR},
            created_at = #{createdAt,jdbcType=VARCHAR},
            type       = #{type,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="getAllWeiboToday" resultMap="ResultMapWithBLOBs">
        select
        min(uid) as uid,
        `name`,
        location,
        url,
        created_at,
        `type`,
        <include refid="Blob_Column_List"/>
        from weibo
        WHERE TO_DAYS(NOW()) - TO_DAYS(created_at) = 0
        GROUP BY uid,`name`,location,url,created_at,`type`,text
        ORDER BY created_at ASC
    </select>
    <cache eviction="LRU"
           type="org.apache.ibatis.cache.impl.PerpetualCache"
           flushInterval="120000"
           size="1024"
           readOnly="true"/>
</mapper>